<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="22488" started-at="2018-06-05T13:11:32Z" finished-at="2018-06-05T13:11:54Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="22488" started-at="2018-06-05T13:11:32Z" finished-at="2018-06-05T13:11:54Z">
      <class name="com.mindtree.sfdc.Script.MainTest">
        <test-method status="PASS" signature="initFrameWork()[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="initFrameWork" is-config="true" duration-ms="15638" started-at="2018-06-05T13:11:16Z" finished-at="2018-06-05T13:11:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFrameWork -->
        <test-method status="PASS" signature="startReport(java.lang.reflect.Method)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="startReport" is-config="true" duration-ms="1" started-at="2018-06-05T13:11:34Z" finished-at="2018-06-05T13:11:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mindtree.sfdc.Script.MainTest.testScenarios(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="testScenarios(java.lang.String, java.lang.String)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="testScenarios" duration-ms="10382" started-at="2018-06-05T13:11:34Z" data-provider="getScenarios" finished-at="2018-06-05T13:11:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CreateLead]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarios -->
        <test-method status="PASS" signature="endReport(org.testng.ITestResult)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="endReport" is-config="true" duration-ms="546" started-at="2018-06-05T13:11:44Z" finished-at="2018-06-05T13:11:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScenarios status=SUCCESS method=MainTest.testScenarios(java.lang.String, java.lang.String)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="SKIP" signature="testScenarios(java.lang.String, java.lang.String)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="testScenarios" duration-ms="1" started-at="2018-06-05T13:11:45Z" data-provider="getScenarios" finished-at="2018-06-05T13:11:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CreateAccount]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping Scenario as execution status is 'NO']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping Scenario as execution status is 'NO'
at com.mindtree.sfdc.Script.MainTest.testScenarios(MainTest.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarios -->
        <test-method status="PASS" signature="startReport(java.lang.reflect.Method)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="startReport" is-config="true" duration-ms="0" started-at="2018-06-05T13:11:45Z" finished-at="2018-06-05T13:11:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mindtree.sfdc.Script.MainTest.testScenarios(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="endReport(org.testng.ITestResult)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="endReport" is-config="true" duration-ms="2" started-at="2018-06-05T13:11:45Z" finished-at="2018-06-05T13:11:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScenarios status=SKIP method=MainTest.testScenarios(java.lang.String, java.lang.String)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="testScenarios(java.lang.String, java.lang.String)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="testScenarios" duration-ms="9501" started-at="2018-06-05T13:11:45Z" data-provider="getScenarios" finished-at="2018-06-05T13:11:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CreateOpportunity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarios -->
        <test-method status="PASS" signature="startReport(java.lang.reflect.Method)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="startReport" is-config="true" duration-ms="0" started-at="2018-06-05T13:11:45Z" finished-at="2018-06-05T13:11:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mindtree.sfdc.Script.MainTest.testScenarios(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="endReport(org.testng.ITestResult)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="endReport" is-config="true" duration-ms="409" started-at="2018-06-05T13:11:54Z" finished-at="2018-06-05T13:11:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScenarios status=SUCCESS method=MainTest.testScenarios(java.lang.String, java.lang.String)[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="FAIL" signature="endFrameWork()[pri:0, instance:com.mindtree.sfdc.Script.MainTest@13fee20c]" name="endFrameWork" is-config="true" duration-ms="1517" started-at="2018-06-05T13:11:54Z" finished-at="2018-06-05T13:11:56Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[D:\Automation\Training\Framework\SalesForce\csv does not exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: D:\Automation\Training\Framework\SalesForce\csv does not exist
at org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:886)
at com.mindtree.sfdc.Script.BaseTest.endFrameWork(BaseTest.java:126)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:425)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endFrameWork -->
      </class> <!-- com.mindtree.sfdc.Script.MainTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
